/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laptrinhSocket;

import java.io.BufferedReader;
import java.io.FileReader;
import java.net.InetAddress;

/**
 *
 * @author quanh
 */
public class FrmServer extends javax.swing.JFrame {

    /**
     * Creates new form FrmServer
     */
   
    
    public class TuyenNhan extends Thread{
        int C(int k, int n) {
    if (k == 0 || k == n) return 1;
    if (k == 1) return n;
    return C(k - 1, n - 1) + C(k, n - 1);
        }
        public void run(){
            try {
                while(true){
                    String st = gn.Nhan();
                    String [] t = st.split("[:]");
                    String ip = t[0];
                    String cp = t[1];
                    if(cp.equals("/tm"))
                        gn.Gui("He phan tan", ip, 1261);
                    if(cp.equals("/ht"))
                        gn.Gui(InetAddress.getLocalHost().getHostName(), ip, 1261);
                    if(cp.equals("/quit"))
                        System.exit(1);
                    
                    String[] t1 = cp.split("[;]");
                    
                    if(t1[0].equals("/+")){
                        int s = 0;
                        int n = t1.length;
                        int [] a = new int[t1.length];
                        for(int i = 1;i < n; i++){
                            a[i] = Integer.parseInt(t1[i]);
                            s += a[i];
                        }
                        int min = a[1];
                        int max = a[1];
                        for(int i  = 1; i < n; i++ ){
                            if(a[i] < min){
                                min = a[i];
                            }
                            if(a[i] > max ){
                                max = a[i];
                            }
                        }
                        gn.Gui("Tong :"+s, ip, 1261);
                        gn.Gui("So lon nhat :"+max,ip,1261);
                        gn.Gui("So nho nhat:"+min, ip, 1261);
                        gn.Gui("So chu so Client gui len:"+n+"so",ip,1261);
                    }
                    if(cp.equals("/kq")){
                        FileReader f = new FileReader("kq.txt");
                        BufferedReader r = new BufferedReader(f);
                        while (true) {
                            String st1 = r.readLine();
                            if(st1 == ""||st1==null) break;
                            gn.Gui(st1, ip, 1261);
                        }
                        r.close();
                    }
                    if(t1[0].equals("/C")){
                        int k = Integer.parseInt(t1[1]);
                        int n = Integer.parseInt(t1[2]);
                        gn.Gui("C("+k+","+n+")="+C(k,n), ip, 1261);
                    }
            list1.add(st);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    public FrmServer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new java.awt.List();
        txtServer = new java.awt.TextField();
        btnServer = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server");
        setPreferredSize(new java.awt.Dimension(573, 469));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        txtServer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtServerKeyPressed(evt);
            }
        });

        btnServer.setLabel("Send");
        btnServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(list1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                    .addComponent(txtServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addComponent(btnServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnServer, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(txtServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(361, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
GuiNhan gn = new GuiNhan();
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            gn.MoCong(1260);
            TuyenNhan td = new TuyenNhan();
            td.start();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServerActionPerformed
        // TODO add your handling code here:
         try {
            //Lấy địa chỉ ip của client
            String ip = InetAddress.getLocalHost().getHostAddress();
            String data = txtServer.getText();
            list1.add("Server" + " " + ":" + "(" +java.time.LocalTime.now() + ")" + ":" + " "+ data);
            gn.Gui("Server" + " " + ":" + "(" +java.time.LocalTime.now() + ")" + ":" + " "+ data, "127.0.0.1", 1261);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnServerActionPerformed

    private void txtServerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtServerKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == 10){
             try {
            //Lấy địa chỉ ip của client
            String ip = InetAddress.getLocalHost().getHostAddress();
            String data = txtServer.getText();
            list1.add("Server" + " " + ":" + "(" +java.time.LocalTime.now() + ")" + ":" + " "+ data);
            gn.Gui("Server" + " " + ":" + "(" +java.time.LocalTime.now() + ")" + ":" + " "+ data, "127.0.0.1", 1261);
        } catch (Exception e) {
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_txtServerKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnServer;
    private java.awt.List list1;
    private java.awt.TextField txtServer;
    // End of variables declaration//GEN-END:variables
}
